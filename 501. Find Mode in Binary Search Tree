/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    HashMap<Integer, Integer> map = new HashMap();
    public int[] findMode(TreeNode root) {
        List<Integer> ans = new ArrayList();
        helper(root);
        int max = Integer.MIN_VALUE;
        for(int v : map.values()) if(v > max) max = v;
        for(int k : map.keySet()) if(map.get(k) == max) ans.add(k);
        
        int[] res = new int[ans.size()];
        for(int i = 0; i<res.length; i++) res[i] = ans.get(i);
        return res;
    }
    void helper(TreeNode root){
        if(root == null) return;
        map.put(root.val, map.getOrDefault(root.val, 0) + 1);
        helper(root.left);
        helper(root.right);
    }
}
