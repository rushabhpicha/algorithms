class Solution {
    List<List<Integer>> list = new ArrayList();
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if(root == null) return list;
        
        Deque<TreeNode> deque = new LinkedList();
        deque.offer(null);
        deque.offerFirst(root);
        while(deque.size() > 1){
            root = deque.peekFirst();
            List<Integer> l = new ArrayList();
            while(root != null){
                root = deque.pollFirst();
                l.add(root.val);
                if(root.left != null) deque.addLast(root.left);
                if(root.right != null) deque.addLast(root.right);
                root = deque.peekFirst();
            }
            list.add(l);
            root = deque.peekLast();
            List<Integer> l1 = new ArrayList();
            while(root != null){
                root = deque.pollLast();
                l1.add(root.val);
                if(root.right != null) deque.addFirst(root.right);
                if(root.left != null) deque.addFirst(root.left);
                
                root = deque.peekLast();
            }
            if(!l1.isEmpty()) list.add(l1);
        }
        return list;
    }
}
