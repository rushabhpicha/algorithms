/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> list = new ArrayList();
    public List<Integer> largestValues(TreeNode root) {
        if(root == null) return list;
        Queue<TreeNode> queue = new LinkedList();
        queue.add(root);
        
        while(queue.size() > 0){
            int size = queue.size();
            int max = Integer.MIN_VALUE;
            for(int i = 0; i<size; i++){
                root = queue.poll();
                max = Math.max(max, root.val);
                if(root.left != null) queue.add(root.left);
                if(root.right != null) queue.add(root.right);
                
            }
            list.add(max);
        }
        return list;
        
    }
}
