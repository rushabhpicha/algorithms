class Solution {
    public String reorganizeString(String S) {
        HashMap<Character, Integer> map = new HashMap();
        for(int i= 0; i<S.length(); i++) map.put(S.charAt(i), map.getOrDefault(S.charAt(i), 0) + 1);
        PriorityQueue<Character> pq = new PriorityQueue(new Comparator<Character>(){
           public int compare(Character a, Character b){
               return map.get(b) - map.get(a);
           } 
        });
        for(char k : map.keySet()) pq.add(k);
        StringBuilder sb = new StringBuilder();
        while(pq.size() > 1){
            char first = pq.poll();
            char second = pq.poll();
            sb.append(first);
            sb.append(second);
            map.put(first, map.get(first) - 1);
            map.put(second, map.get(second) - 1);
            if(map.get(first) > 0) pq.add(first);
            if(map.get(second) > 0) pq.add(second);
        }
        if(!pq.isEmpty()){
            char c = pq.poll();
            if(map.get(c) > 1) return "";
            sb.append(c);
        }
        return sb.toString();
    }
}
