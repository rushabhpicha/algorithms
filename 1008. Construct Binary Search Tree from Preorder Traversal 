/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        TreeNode root = new TreeNode(preorder[0]);
        for(int i=1; i<preorder.length; i++){
            int cur = preorder[i];
            traverseTree(cur, root);
        }
        return root;
    }
    
    void traverseTree(int cur, TreeNode root){
        if(root == null) return;
        if(cur < root.val && root.left == null){
            root.left = new TreeNode(cur);
        }
        else if(cur > root.val && root.right == null){
            root.right = new TreeNode(cur);
        }
        else if(cur < root.val){
            traverseTree(cur, root.left);
        }
        else{
            traverseTree(cur, root.right);
        }
    }
}