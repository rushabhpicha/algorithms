/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public int maxDepth(Node root) {
        int ans = 0;
        if(root == null) return 0;
        Queue<Node> queue = new LinkedList();
        queue.offer(root);
        
        while(!queue.isEmpty()){
            int s = queue.size();
            for(int i = 0; i<s; i++) {
                Node current = queue.poll();
                for(Node child : current.children){
                    queue.offer(child);
                }
            }
            ans++;
        }
        return ans;
    }
}

